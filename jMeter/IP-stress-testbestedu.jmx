<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IP stress test." enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Test oppsett" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Set variabler" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="startTime" elementType="Argument">
              <stringProp name="Argument.name">startTime</stringProp>
              <stringProp name="Argument.value">${__time(,)}</stringProp>
              <stringProp name="Argument.desc">Records the start of the test run.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="host" elementType="Argument">
              <stringProp name="Argument.name">host</stringProp>
              <stringProp name="Argument.value">localhost</stringProp>
              <stringProp name="Argument.desc">Host url for integrasjonspunktet du skal teste.</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
              <stringProp name="Argument.value">9093</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="jmxPort" elementType="Argument">
              <stringProp name="Argument.name">jmxPort</stringProp>
              <stringProp name="Argument.value">1099</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="threadCount" elementType="Argument">
              <stringProp name="Argument.name">threadCount</stringProp>
              <stringProp name="Argument.value">1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">How many iterations we should run.</stringProp>
            </elementProp>
            <elementProp name="testFile" elementType="Argument">
              <stringProp name="Argument.name">testFile</stringProp>
              <stringProp name="Argument.value">/Users/adam.haeger/Projects/mocks/jMeter/liten.pdf</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Full system path to the file you wish to send.</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Sett opp liste for holde conversationIds." enabled="true">
          <stringProp name="BeanShellSampler.query">bsh.shared.conversationIds=new ArrayList();
bsh.shared.conversationIdsSuccessfull=new ArrayList();

// Create a list of conversation IDS:
for (int i = 0; i &lt; Integer.parseInt(vars.get(&quot;threadCount&quot;)); i++) {
  bsh.shared.conversationIds.add(UUID.randomUUID().toString());
}




</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Send meldinger." enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="LÃ¸kke kontroller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__BeanShell(Integer.parseInt(vars.get(&quot;counter&quot;)) &lt; bsh.shared.conversationIds.size()-1,)}
</stringProp>
        </WhileController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end">${__BeanShell(bsh.shared.conversationIds.size()-1,)}</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">
log.info(&quot;What Count???&quot;);
log.info(vars.get(&quot;counter&quot;));

bsh.shared.currentConvoID = bsh.shared.conversationIds.get(Integer.parseInt(vars.get(&quot;counter&quot;)));


log.info(&quot;bsh.shared.currentConvoID&quot;);
log.info(bsh.shared.currentConvoID);</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Opprett conversations og send meldinger." enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send message." enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;soap:Envelope xmlns:soap=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;soap:Body&gt;&#xd;
      &lt;PutMessageRequest xmlns=&quot;http://www.arkivverket.no/Noark/Exchange/types&quot;&gt;&#xd;
         &lt;envelope xmlns=&quot;&quot; conversationId=&quot;${__BeanShell(bsh.shared.currentConvoID)}&quot; contentNamespace=&quot;http://www.arkivverket.no/Noark4-1-WS-WD/types&quot;&gt;&#xd;
            &lt;sender&gt;&#xd;
               &lt;orgnr&gt;910229028&lt;/orgnr&gt;&#xd;
               &lt;name&gt;Fylkesmannen i Sogn og Fjordane&lt;/name&gt;&#xd;
               &lt;email&gt;fmsfpost@fylkesmannen.no&lt;/email&gt;&#xd;
               &lt;ref&gt;2014/2703&lt;/ref&gt;&#xd;
            &lt;/sender&gt;&#xd;
            &lt;receiver&gt;&#xd;
               &lt;orgnr&gt;910229028&lt;/orgnr&gt;&#xd;
               &lt;name&gt;Fylkesmannen i Sogn og Fjordane&lt;/name&gt;&#xd;
               &lt;email&gt;fmsfpost@fylkesmannen.no&lt;/email&gt;&#xd;
               &lt;ref /&gt;&#xd;
            &lt;/receiver&gt;&#xd;
         &lt;/envelope&gt;&#xd;
         &lt;payload xmlns=&quot;&quot;&gt;&lt;![CDATA[&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;Melding xmlns=&quot;http://www.arkivverket.no/Noark4-1-WS-WD/types&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
   &lt;journpost xmlns=&quot;&quot;&gt;&#xd;
      &lt;jpId&gt;219816&lt;/jpId&gt;&#xd;
      &lt;jpJaar&gt;2015&lt;/jpJaar&gt;&#xd;
      &lt;jpSeknr&gt;11734&lt;/jpSeknr&gt;&#xd;
      &lt;jpJpostnr&gt;2&lt;/jpJpostnr&gt;&#xd;
      &lt;jpJdato&gt;2015-10-08&lt;/jpJdato&gt;&#xd;
      &lt;jpNdoktype&gt;U&lt;/jpNdoktype&gt;&#xd;
      &lt;jpDokdato&gt;2015-10-08&lt;/jpDokdato&gt;&#xd;
      &lt;jpStatus&gt;F&lt;/jpStatus&gt;&#xd;
      &lt;jpInnhold&gt;Test1&lt;/jpInnhold&gt;&#xd;
      &lt;jpU1&gt;0&lt;/jpU1&gt;&#xd;
      &lt;jpForfdato /&gt;&#xd;
      &lt;jpTgkode /&gt;&#xd;
      &lt;jpUoff /&gt;&#xd;
      &lt;jpAgdato /&gt;&#xd;
      &lt;jpAgkode /&gt;&#xd;
      &lt;jpSaksdel /&gt;&#xd;
      &lt;jpU2&gt;0&lt;/jpU2&gt;&#xd;
      &lt;jpArkdel /&gt;&#xd;
      &lt;jpTlkode /&gt;&#xd;
      &lt;jpAntved&gt;0&lt;/jpAntved&gt;&#xd;
      &lt;jpSaar&gt;2014&lt;/jpSaar&gt;&#xd;
      &lt;jpSaseknr&gt;2703&lt;/jpSaseknr&gt;&#xd;
      &lt;jpOffinnhold&gt;Test1&lt;/jpOffinnhold&gt;&#xd;
      &lt;jpTggruppnavn /&gt;&#xd;
      &lt;avsmot&gt;&#xd;
         &lt;amId&gt;501153&lt;/amId&gt;&#xd;
         &lt;amOrgnr&gt;974763907&lt;/amOrgnr&gt;&#xd;
         &lt;amIhtype&gt;1&lt;/amIhtype&gt;&#xd;
         &lt;amKopimot&gt;0&lt;/amKopimot&gt;&#xd;
         &lt;amBehansv&gt;0&lt;/amBehansv&gt;&#xd;
         &lt;amNavn&gt;Fylkesmannen i Sogn og Fjordane&lt;/amNavn&gt;&#xd;
         &lt;amU1&gt;0&lt;/amU1&gt;&#xd;
         &lt;amKortnavn&gt;FMSF&lt;/amKortnavn&gt;&#xd;
         &lt;amAdresse&gt;NjÃ¸savegen 2&lt;/amAdresse&gt;&#xd;
         &lt;amPostnr&gt;6863&lt;/amPostnr&gt;&#xd;
         &lt;amPoststed&gt;Leikanger&lt;/amPoststed&gt;&#xd;
         &lt;amUtland /&gt;&#xd;
         &lt;amEpostadr&gt;fmsfpost@fylkesmannen.no&lt;/amEpostadr&gt;&#xd;
         &lt;amRef /&gt;&#xd;
         &lt;amJenhet /&gt;&#xd;
         &lt;amAvskm /&gt;&#xd;
         &lt;amAvskdato /&gt;&#xd;
         &lt;amFrist /&gt;&#xd;
         &lt;amForsend&gt;D&lt;/amForsend&gt;&#xd;
         &lt;amAdmkort&gt;[Ufordelt]&lt;/amAdmkort&gt;&#xd;
         &lt;amAdmbet&gt;Ufordelt/sendt tilbake til arkiv&lt;/amAdmbet&gt;&#xd;
         &lt;amSbhinit&gt;[Ufordelt]&lt;/amSbhinit&gt;&#xd;
         &lt;amSbhnavn&gt;Ikke fordelt til saksbehandler&lt;/amSbhnavn&gt;&#xd;
         &lt;amAvsavdok /&gt;&#xd;
         &lt;amBesvardok /&gt;&#xd;
      &lt;/avsmot&gt;&#xd;
      &lt;dokument&gt;&#xd;
         &lt;dlRnr&gt;1&lt;/dlRnr&gt;&#xd;
         &lt;dlType&gt;H&lt;/dlType&gt;&#xd;
         &lt;dbKategori&gt;ND&lt;/dbKategori&gt;&#xd;
         &lt;dbTittel&gt;Test1&lt;/dbTittel&gt;&#xd;
         &lt;dbStatus&gt;F&lt;/dbStatus&gt;&#xd;
         &lt;veVariant&gt;A&lt;/veVariant&gt;&#xd;
         &lt;veDokformat&gt;RA-PDF&lt;/veDokformat&gt;&#xd;
         &lt;fil&gt;&lt;base64&gt;${__base64Encode(${__FileToString(${__BeanShell(vars.get(&quot;testFile&quot;))})})}&lt;/base64&gt;&lt;/fil&gt;&#xd;
         &lt;veFilnavn /&gt;&#xd;
         &lt;veMimeType /&gt;&#xd;
      &lt;/dokument&gt;&#xd;
   &lt;/journpost&gt;&#xd;
   &lt;noarksak xmlns=&quot;&quot;&gt;&#xd;
      &lt;saId&gt;68286&lt;/saId&gt;&#xd;
      &lt;saSaar&gt;2014&lt;/saSaar&gt;&#xd;
      &lt;saSeknr&gt;2703&lt;/saSeknr&gt;&#xd;
      &lt;saPapir&gt;0&lt;/saPapir&gt;&#xd;
      &lt;saDato&gt;2014-11-27&lt;/saDato&gt;&#xd;
      &lt;saTittel&gt;Test Knutepunkt herokuapp&lt;/saTittel&gt;&#xd;
      &lt;saU1&gt;0&lt;/saU1&gt;&#xd;
      &lt;saStatus&gt;B&lt;/saStatus&gt;&#xd;
      &lt;saArkdel&gt;EARKIV1&lt;/saArkdel&gt;&#xd;
      &lt;saType /&gt;&#xd;
      &lt;saJenhet&gt;SENTRAL&lt;/saJenhet&gt;&#xd;
      &lt;saTgkode /&gt;&#xd;
      &lt;saUoff /&gt;&#xd;
      &lt;saBevtid /&gt;&#xd;
      &lt;saKasskode /&gt;&#xd;
      &lt;saKassdato /&gt;&#xd;
      &lt;saProsjekt /&gt;&#xd;
      &lt;saOfftittel&gt;Test Knutepunkt herokuapp&lt;/saOfftittel&gt;&#xd;
      &lt;saAdmkort&gt;FM-ADMA&lt;/saAdmkort&gt;&#xd;
      &lt;saAdmbet&gt;Administrasjon&lt;/saAdmbet&gt;&#xd;
      &lt;saAnsvinit&gt;JPS&lt;/saAnsvinit&gt;&#xd;
      &lt;saAnsvnavn&gt;John Petter Svedal&lt;/saAnsvnavn&gt;&#xd;
      &lt;saTggruppnavn /&gt;&#xd;
   &lt;/noarksak&gt;&#xd;
&lt;/Melding&gt;]]&gt;&lt;/payload&gt;&#xd;
      &lt;/PutMessageRequest&gt;&#xd;
   &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${host}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/noarkExchange</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/xml;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="debug" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="Sjekk at meldinger fÃ¥r SENDT status." enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Sett loop variabel." enabled="true">
          <stringProp name="BeanShellSampler.query">//
log.info(&quot;\n\n\n\n\n!!!&quot;);

log.info(&quot;STAARTING WITH THIS!!!&quot;);
log.info(bsh.shared.conversationIds.toString());

log.info(&quot;How many???&quot;);
log.info(bsh.shared.conversationIds.size().toString());
////bsh.shared.mylist.clear();
//
log.info(&quot;\n\n\n\n\n&quot;);

vars.put(&quot;allOk&quot;,&quot;false&quot;);
bsh.shared.loopCount=bsh.shared.conversationIds.size();
bsh.shared.maxValue=bsh.shared.conversationIds.size();

//
//vars.put(&quot;loopSize&quot;,bsh.shared.conversationIds.size().toString());
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
          <stringProp name="WhileController.condition">${__javaScript(&quot;${allOk}&quot; !== &quot;true&quot;,)}</stringProp>
        </WhileController>
        <hashTree>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">0</stringProp>
            <stringProp name="CounterConfig.end">${__BeanShell(bsh.shared.loopCount)-1}</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">loopCounter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Sett conversation ID." enabled="true">
            <stringProp name="BeanShellSampler.query">idx = Integer.parseInt(vars.get(&quot;loopCounter&quot;));
vars.put(&quot;currentConversationId&quot;,  bsh.shared.conversationIds.get(idx));
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">localhost</stringProp>
            <stringProp name="HTTPSampler.port">9093</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/conversations/${currentConversationId}?useConversationId=true</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">messageStatus</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.messageStatuses[?(@.status == &quot;SENDT&quot;)].status</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="true">
            <stringProp name="BeanShellSampler.query">log.info(&quot;\n\n\n\n&quot;);
log.info(&quot;Working with:&quot;);
log.info(vars.get(&quot;currentConversationId&quot;));
log.info(&quot;Status is:&quot;);
log.info(vars.get(&quot;messageStatus&quot;));
log.info(&quot;\n\n\n\n\n\n&quot;);

if(vars.get(&quot;messageStatus&quot;).equals(&quot;SENDT&quot;)){
	bsh.shared.conversationIds.remove(vars.get(&quot;currentConversationId&quot;));
}

if(bsh.shared.conversationIds.size() == 0){
	vars.put(&quot;allOk&quot;,&quot;true&quot;);
	log.info(&quot;\n\n\n\n\n\n&quot;);
		log.info(&quot;ALLE OK!&quot;);		
		long millis = System.currentTimeMillis() - Long.parseLong(vars.get(&quot;startTime&quot;));
		log.info(&quot;ALLE MELDINGER SENDT TOK:&quot;);
		log.info(millis.toString() + &quot; ms&quot;);
	log.info(&quot;\n\n\n\n&quot;);
}
</stringProp>
            <stringProp name="BeanShellSampler.filename"></stringProp>
            <stringProp name="BeanShellSampler.parameters"></stringProp>
            <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
          </BeanShellSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
